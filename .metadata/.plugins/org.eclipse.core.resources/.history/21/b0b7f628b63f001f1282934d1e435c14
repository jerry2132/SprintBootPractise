package com.example.SpringDemoProject.controller;

import java.time.LocalDate;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.SpringDemoProject.apiResponse.ApiResponse;
import com.example.SpringDemoProject.dto.College;
import com.example.SpringDemoProject.service.CollegeInterface;

@RestController
public class CollegeController {
	
	@Autowired
	CollegeInterface collegeInterface;

	
	@GetMapping("/getDate")
	public String getDate() {
		
		return LocalDate.now()+"hjkad";
	}
	
	@PostMapping("/saveCollege")
	public String  saveCollegeDetails(@RequestBody College college) {

		return collegeInterface.saveCollege(college);
		
	}
	
	
	@GetMapping("/getCollegeDetails")
	public ResponseEntity<ApiResponse<College>> getCollegeDetails(){
	return collegeInterface.getCollegeDetails();
	}
	
	
	@PostMapping("/saveMultipleCollege")
	public String  saveMultipleCollege(@RequestBody List<College> college) {

		return collegeInterface.saveMultipleCollege(college);
		
	}
	
	@PostMapping("/saveMultipleCollegeWithValidation")
	public ResponseEntity<ApiResponse<College>> saveMultipleCollegeWithValidation(@RequestBody List<College> college) {
		
		return collegeInterface.saveMultipleCollegeWithValidation(college);
	}
	
	
	@GetMapping("/getCollegeById/{collegeId}")
	public ResponseEntity<ApiResponse<College>> findCollegeById(@PathVariable int collegeId) {
		
		return collegeInterface.findCollegeById(collegeId);
		
	}
	
	@GetMapping("/getByName/{name}")
	public ResponseEntity<ApiResponse<College>> getCollegeToUpdate(@PathVariable String name) {
		
		return collegeInterface.findAllByName(name);
	}
	
	@GetMapping("/getAll/{field}")
	public ResponseEntity<ApiResponse<College>> getSortedData(@PathVariable String field){
		return collegeInterface.sortByField(field);
	}
	
	
}
